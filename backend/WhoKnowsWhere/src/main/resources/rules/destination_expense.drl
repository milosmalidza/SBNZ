
import com.WhoKnowsWhere.WhoKnowsWhere.dto.ExpenseDTO;
import com.WhoKnowsWhere.WhoKnowsWhere.model.TravelMethod;
import com.WhoKnowsWhere.WhoKnowsWhere.dto.RecommendationsRequestDTO;
import com.WhoKnowsWhere.WhoKnowsWhere.dto.RecommendationDTO;

global RecommendationsRequestDTO recommendationsRequestDTO;

rule "Set expense linearly with distance when traveling with Car"
	no-loop
	lock-on-active true
	when 
		$expense: ExpenseDTO(travelMethod == TravelMethod.CAR)
	then
		modify($expense) {
			setEstimatedPrice($expense.getEstimatedPrice() + $expense.getDistance() * 0.3),
			setEstimatedTime($expense.getDistance() * 0.55);
		}
	
end

rule "Set expense linearly with distance when traveling with Bus"
	no-loop
	lock-on-active true
	when 
		$expense: ExpenseDTO(travelMethod == TravelMethod.BUS)
	then
		modify($expense) {
			setEstimatedPrice($expense.getEstimatedPrice() + $expense.getDistance() * 0.4),
			setEstimatedTime($expense.getDistance() * 0.85);
		}
	
end

rule "Set expense linearly with distance when traveling with Plane"
	no-loop
	lock-on-active true
	when 
		$expense: ExpenseDTO(travelMethod == TravelMethod.PLANE)
	then
		modify($expense) {
			setEstimatedPrice($expense.getEstimatedPrice() + $expense.getDistance() * 0.55),
			setEstimatedTime($expense.getDistance() * 0.15);
		}
	
end


rule "Increase rank with expense"
    salience(-100)
	no-loop
	when
	    $recommendation: RecommendationDTO($dest: destination)
		$expense: ExpenseDTO(estimatedPrice > recommendationsRequestDTO.desireableExpense - 100 && estimatedPrice < recommendationsRequestDTO.desireableExpense + 100)
	then
		modify($recommendation) {
			setRank($recommendation.getRank() + 15)
		}

end